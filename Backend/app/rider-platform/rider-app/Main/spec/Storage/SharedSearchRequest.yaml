imports:
  Merchant: Domain.Types.Merchant
  MerchantOperatingCity: Domain.Types.MerchantOperatingCity
  SearchRequest: Domain.Types.SearchRequest
  VehicleCategory: BecknV2.OnDemand.Enums
  Distance: Kernel.Types.Common
  Price: Kernel.Types.Common
  Value: Data.Aeson
  DistanceUnit: Kernel.Types.Common
  Money: Kernel.Types.Common
  HighPrecMoney: Kernel.Types.Common
  Currency: Kernel.Utils.Common
  Centesimal: Kernel.Types.Common
  HighPrecDistance: Kernel.Types.Common

SharedSearchRequest:
  tableName: shared_search_request
  derives: "Generic, Show"

  fields:
    id: Id SharedSearchRequest
    status: SharedSearchRequestStatus
    searchRequestIds: "[Id SearchRequest]"
    merchantId: Id Merchant
    merchantOperatingCityId: Id MerchantOperatingCity
    vehicleCategory: VehicleCategory
    waypoints: Value
    maxDistance: Maybe Distance
    totalCustomerExtraFee: Maybe Price
    validTill: UTCTime
    createdAt: UTCTime
    updatedAt: UTCTime

  constraints:
    id: PrimaryKey

  sqlType:
    status: character varying(255)
    searchRequestIds: "uuid[]"
    merchantId: character varying(36)
    merchantOperatingCityId: character varying(36)
    vehicleCategory: character varying(255)
    waypoints: "jsonb"
    maxDistance: double precision
    maxDistanceValue: double precision
    distanceUnit: character varying(255)
    totalCustomerExtraFee: numeric(30,2)
    totalCustomerExtraFeeAmount: numeric(30,10)
    currency: character varying(255)
    validTill: timestamptz
    createdAt: timestamptz
    updatedAt: timestamptz

  beamFields:
    maxDistance:
      maxDistance: Maybe Centesimal
      maxDistanceValue: Maybe HighPrecDistance
      distanceUnit: Maybe DistanceUnit
    totalCustomerExtraFee:
      totalCustomerExtraFee: Maybe Money
      totalCustomerExtraFeeAmount: Maybe HighPrecMoney
      currency: Maybe Currency

  toTType:
    maxDistance: (Kernel.Utils.Common.getHighPrecMeters . Kernel.Utils.Common.distanceToHighPrecMeters <$> maxDistance)|E
    maxDistanceValue: (Kernel.Utils.Common.distanceToHighPrecDistance <$> (maxDistance <&> (.unit)) <*> maxDistance)|E
    distanceUnit: (maxDistance <&> (.unit))|E
    totalCustomerExtraFee: (totalCustomerExtraFee <&> (.amountInt))|E
    totalCustomerExtraFeeAmount: (totalCustomerExtraFee <&> (.amount))|E
    currency: (totalCustomerExtraFee <&> (.currency))|E

  fromTType:
    maxDistance: (Kernel.Utils.Common.mkDistanceWithDefault distanceUnit maxDistanceValue . Kernel.Types.Common.HighPrecMeters <$> maxDistance)|E
    totalCustomerExtraFee: Kernel.Utils.Common.mkPriceWithDefault totalCustomerExtraFeeAmount currency <$> totalCustomerExtraFee|E

  queries:
    updateStatus:
      kvFunction: updateOneWithKV
      params: [status, updatedAt]
      where: id

    findActiveRequests:
      kvFunction: findAllWithKV
      where: status

  types:
    SharedSearchRequestStatus:
      enum: "POOLING, MATCHED, EXPIRED, CANCELLED"
      derive: "HttpInstance"
