imports:
  Merchant: Domain.Types.Merchant
  MerchantOperatingCity: Domain.Types.MerchantOperatingCity
  Driver: Domain.Types.Person
  Ride: Domain.Types.Ride
  HighPrecMoney: Kernel.Types.Common
  UTCTime: Data.Time
  PayoutOrder: Lib.Payment.Domain.Types.PayoutOrder

DriverWallet:
  tableName: driver_wallet
  derives: "Generic,Show"
  types:
    TransactionType:
      enum: "RIDE_TRANSACTION,PAYOUT,TOPUP"
      derive: "HttpInstance"
    PayoutStatus:
      enum: "INITIATED,FAILED,SETTLED"
      derive: "HttpInstance"
  fields:
    id: Id DriverWallet
    merchantId: Maybe (Id Merchant)
    merchantOperatingCityId: Id MerchantOperatingCity
    driverId: Id Driver
    rideId: Maybe (Id Ride)
    transactionType: TransactionType
    collectionAmount: Maybe HighPrecMoney
    gstDeduction: Maybe HighPrecMoney
    merchantPayable: Maybe HighPrecMoney
    driverPayable: Maybe HighPrecMoney
    runningBalance: HighPrecMoney
    payoutOrderId: Maybe (Id PayoutOrder)
    payoutStatus: Maybe PayoutStatus

    # TDS calculation for current financial year
    tdsBaseAmount: Maybe HighPrecMoney
    tdsDeduction: Maybe HighPrecMoney
    financialYearCollectionAmount: Maybe HighPrecMoney
    financialYearTdsBaseAmount: Maybe HighPrecMoney
    financialYearTdsDeduction: Maybe HighPrecMoney
    financialYearStart: Maybe Int # 2025 means FY from 2025.04.01 to 2026.03.31

    createdAt: UTCTime
    updatedAt: UTCTime
  constraints:
    id: PrimaryKey
  queries:
    findAllByPayoutOrderId:
      kvFunction: findAllWithKV
      where: payoutOrderId
  sqlType:
    collectionAmount: numeric(30,2)
    gstDeduction: numeric(30,2)
    merchantPayable: numeric(30,2)
    driverPayable: numeric(30,2)
    runningBalance: numeric(30,2)
    tdsBaseAmount: numeric(30,2)
    tdsDeduction: numeric(30,2)
    financialYearCollectionAmount: numeric(30,2)
    financialYearTdsBaseAmount: numeric(30,2)
    financialYearTdsDeduction: numeric(30,2)
    transactionType: character varying(255)
  extraOperations:
    - EXTRA_QUERY_FILE
