imports:
  Merchant: Domain.Types.Merchant
  MerchantOperatingCity: Domain.Types.MerchantOperatingCity
  Location: Domain.Types.Location
  LatLong: Kernel.External.Maps
  Centesimal: Kernel.Types.Common
  MediaFile: IssueManagement.Domain.Types.MediaFile
  Money: Kernel.Types.Common
  BaseUrl: Kernel.Types.Common
  HighPrecMoney: Kernel.Types.Common
  Booking: Domain.Types.Booking
  Person: Domain.Types.Person
  FareParameters: Domain.Types.FareParameters
  DriverGoHomeRequest: Domain.Types.DriverGoHomeRequest
  Client: Domain.Types.Client
  Double: Kernel.Prelude
  Int: Kernel.Prelude
  Device : Kernel.Types.Version
  DeviceType: Kernel.Types.Version
  Version: Kernel.Types.Version
  TripCategory: Domain.Types.Common
  Confidence: Kernel.Types.Confidence
  VehicleVariant: Domain.Types.VehicleVariant
  ServiceTierType: Domain.Types.Common
  TagNameValue: Lib.Yudhishthira.Types

Ride:
  tableName: ride
  derives: "Generic,Show,FromJSON,ToJSON"
  types:
    RideEndedBy:
      enum: "Driver,Dashboard,CallBased,CronJob,Allocator"
    OdometerReading:
      value: Centesimal
      fileId: Maybe (Id MediaFile)
      derive: "Eq"
    RideStatus:
      enum: "UPCOMING,NEW,INPROGRESS,COMPLETED,CANCELLED"
      derive: "'ListInstance,HttpInstance"
    EstimatedEndTimeRange:
      start: UTCTime
      end: UTCTime
  fields:
    id: Id Ride
    bookingId: Id Booking
    shortId: ShortId Ride
    hasStops : Maybe Bool
    clientId: Maybe Text
    merchantId: Maybe (Id Merchant)
    merchantOperatingCityId: Id MerchantOperatingCity
    status: RideStatus
    driverId: Id Person
    otp: Text
    endOtp: Maybe Text
    trackingUrl: BaseUrl
    fare: Maybe HighPrecMoney
    currency: Currency
    traveledDistance: HighPrecMeters
    chargeableDistance: Maybe Meters
    distanceUnit: DistanceUnit
    driverArrivalTime: Maybe UTCTime
    destinationReachedAt: Maybe UTCTime
    tripStartTime: Maybe UTCTime
    tripEndTime: Maybe UTCTime
    tripStartPos: Maybe LatLong
    tripEndPos: Maybe LatLong
    previousRideTripEndPos: Maybe LatLong
    previousRideTripEndTime: Maybe UTCTime
    isDriverSpecialLocWarrior: Bool
    isAdvanceBooking : Bool
    isPetRide: Bool
    fromLocation: Location
    stops : "[Location]"
    toLocation: Maybe Location
    fareParametersId: Maybe (Id FareParameters)
    distanceCalculationFailed: Maybe Bool
    pickupDropOutsideOfThreshold: Maybe Bool
    startOdometerReading: Maybe OdometerReading
    endOdometerReading: Maybe OdometerReading
    createdAt: UTCTime
    updatedAt: UTCTime
    driverDeviatedToTollRoute: Maybe Bool
    driverDeviatedFromRoute: Maybe Bool
    numberOfSnapToRoadCalls: Maybe Int
    numberOfOsrmSnapToRoadCalls: Maybe Int
    numberOfSelfTuned: Maybe Int
    numberOfDeviation: Maybe Bool
    uiDistanceCalculationWithAccuracy: Maybe Int
    uiDistanceCalculationWithoutAccuracy: Maybe Int
    isFreeRide: Maybe Bool
    estimatedTollCharges: Maybe HighPrecMoney
    estimatedTollNames: Maybe [Text]
    tollCharges: Maybe HighPrecMoney
    tollNames: Maybe [Text]
    driverGoHomeRequestId: Maybe (Id DriverGoHomeRequest)
    safetyAlertTriggered: Bool
    tollConfidence: Maybe Confidence
    enableFrequentLocationUpdates: Maybe Bool
    vehicleServiceTierSeatingCapacity: Maybe Int
    vehicleServiceTierAirConditioned: Maybe Double # deprecated
    isAirConditioned: Maybe Bool
    rideEndedBy: Maybe RideEndedBy
    clientSdkVersion: Maybe Version
    clientBundleVersion: Maybe Version
    clientConfigVersion: Maybe Version
    backendConfigVersion: Maybe Version
    backendAppVersion: Maybe Text
    clientDevice: Maybe Device
    vehicleVariant : Maybe VehicleVariant
    vehicleServiceTierName : Maybe Text
    tripCategory: TripCategory
    onlinePayment: Bool
    enableOtpLessRide: Maybe Bool
    cancellationFeeIfCancelled: Maybe HighPrecMoney
    tipAmount: Maybe HighPrecMoney
    passedThroughDestination: Maybe Bool
    deliveryFileIds: Maybe [Id MediaFile]
    estimatedEndTimeRange: Maybe EstimatedEndTimeRange
    rideTags: Maybe [TagNameValue]
    isPickupOrDestinationEdited: Maybe Bool
    isInsured: Bool
    insuredAmount: Maybe Text

  sqlType:
    id: character(36)
    bookingId: character(36)
    status: character varying(255)
    driverId: character(36)
    otp: character(4)
    trackingUrl: character varying(255)
    traveledDistance: double precision
    fareParametersId: character(36)
    merchantId: character(36)
    merchantOperatingCityId: character(36)
    startOdometerReadingValue: double precision
    endOdometerReadingValue: double precision
    startOdometerReadingFileId: character varying(36)
    endOdometerReadingFileId: character varying(36)
    deliveryFileIds: "text[]"
    rideTags: "text[]"

  default:
    traveledDistance: '0'
    tripStartTime: 'CURRENT_TIMESTAMP'
    tripEndTime: 'CURRENT_TIMESTAMP'
    safetyAlertTriggered: 'false'
    isAdvanceBooking: 'false'

  beamFields:
    toLocation: {}
    fromLocation: {}
    stops: {}
    clientDevice:
      clientOsType: Maybe DeviceType
      clientOsVersion: Maybe Text
      clientModelName: Maybe Text
      clientManufacturer: Maybe Text
    tripStartPos:
      tripStartLat: Maybe Double
      tripStartLon: Maybe Double
    tripEndPos:
      tripEndLat: Maybe Double
      tripEndLon: Maybe Double
    previousRideTripEndPos:
      previousRideTripEndLat: Maybe Double
      previousRideTripEndLon: Maybe Double
    startOdometerReading:
      startOdometerReadingValue: Maybe Centesimal
      startOdometerReadingFileId:  Maybe Text
    endOdometerReading:
      endOdometerReadingValue: Maybe Centesimal
      endOdometerReadingFileId:  Maybe Text
    fare:
      fare: Maybe Money
      fareAmount: Maybe HighPrecMoney
    currency:
      currency: Maybe Currency
    distanceUnit:
      distanceUnit : Maybe DistanceUnit
    estimatedEndTimeRange:
      estimatedEndTimeRangeStart: Maybe UTCTime
      estimatedEndTimeRangeEnd: Maybe UTCTime

  fromTType:
    toLocation: Storage.Queries.Transformers.Ride.getToLocation id bookingId merchantId merchantOperatingCityId|IM
    fromLocation: Storage.Queries.Transformers.Ride.getFromLocation id bookingId merchantId merchantOperatingCityId|IM
    stops: Storage.Queries.Transformers.Ride.getStops id hasStops|EM
    trackingUrl: Kernel.Prelude.parseBaseUrl|IM
    merchantOperatingCityId: Storage.Queries.Transformers.Ride.getMerchantOperatingCityId bookingId merchantId|IM
    tripStartPos: Storage.Queries.Transformers.Ride.mkLatLong|I
    tripEndPos: Storage.Queries.Transformers.Ride.mkLatLong|I
    previousRideTripEndPos: Storage.Queries.Transformers.Ride.mkLatLong|I
    startOdometerReading: Storage.Queries.Transformers.Ride.mkOdometerReading|I
    endOdometerReading: Storage.Queries.Transformers.Ride.mkOdometerReading|I
    clientBundleVersion: (mapM Kernel.Utils.Version.readVersion (Data.Text.strip <$> clientBundleVersion))|EM
    clientSdkVersion: (mapM Kernel.Utils.Version.readVersion (Data.Text.strip <$> clientSdkVersion))|EM
    clientConfigVersion: (mapM Kernel.Utils.Version.readVersion (Data.Text.strip <$> clientConfigVersion))|EM
    backendConfigVersion: (mapM Kernel.Utils.Version.readVersion (Data.Text.strip <$> backendConfigVersion))|EM
    clientDevice : (Kernel.Utils.Version.mkClientDevice clientOsType clientOsVersion clientModelName clientManufacturer)|E
    fare: fmap (Kernel.Types.Common.mkAmountWithDefault fareAmount) fare|E
    currency: Kernel.Prelude.fromMaybe Kernel.Types.Common.INR|I
    isAdvanceBooking: Kernel.Prelude.fromMaybe False|I
    isPetRide: Kernel.Prelude.fromMaybe False|I
    tripCategory: Storage.Queries.Transformers.Ride.getTripCategory bookingId |IM
    distanceUnit: Kernel.Prelude.fromMaybe Kernel.Types.Common.Meter|I
    onlinePayment: Kernel.Prelude.fromMaybe False onlinePayment|E
    deliveryFileIds: (Kernel.Types.Id.Id <$> ) <$> deliveryFileIds|E
    isDriverSpecialLocWarrior: Kernel.Prelude.fromMaybe False isDriverSpecialLocWarrior|E
    estimatedEndTimeRange: Storage.Queries.Transformers.Ride.mkEstimatedEndTimeRange <$> estimatedEndTimeRangeStart <*> estimatedEndTimeRangeEnd|E
    rideTags: Lib.Yudhishthira.Tools.Utils.tagsNameValueFromTType
    isInsured: Kernel.Prelude.fromMaybe False isInsured|E

  toTType:
    trackingUrl: Kernel.Prelude.showBaseUrl|I
    tripStartLat: Kernel.Prelude.fmap (.lat)|I
    tripStartLon: Kernel.Prelude.fmap (.lon)|I
    tripEndLat: Kernel.Prelude.fmap (.lat)|I
    tripEndLon: Kernel.Prelude.fmap (.lon)|I
    previousRideTripEndLat: Kernel.Prelude.fmap (.lat)|I
    previousRideTripEndLon: Kernel.Prelude.fmap (.lon)|I
    startOdometerReadingValue: Kernel.Prelude.fmap Domain.Types.Ride.value|I
    startOdometerReadingFileId: getStartOdometerReadingFileId
    endOdometerReadingValue: Kernel.Prelude.fmap Domain.Types.Ride.value|I
    endOdometerReadingFileId: getEndOdometerReadingFileId
    merchantOperatingCityId: Kernel.Prelude.Just $ Kernel.Types.Id.getId|I
    clientBundleVersion: fmap Kernel.Utils.Version.versionToText clientBundleVersion|E
    clientSdkVersion: fmap Kernel.Utils.Version.versionToText clientSdkVersion|E
    clientConfigVersion: fmap Kernel.Utils.Version.versionToText clientConfigVersion|E
    backendConfigVersion: fmap Kernel.Utils.Version.versionToText backendConfigVersion|E
    clientOsVersion:  (clientDevice <&> (.deviceVersion))|E
    clientOsType:  (clientDevice <&> (.deviceType))|E
    fare: Kernel.Prelude.fmap roundToIntegral|I
    currency: Kernel.Prelude.Just|I
    isAdvanceBooking: Kernel.Prelude.Just|I
    isPetRide: Kernel.Prelude.Just|I
    tripCategory: Kernel.Prelude.Just|I
    distanceUnit: Kernel.Prelude.Just|I
    onlinePayment: Kernel.Prelude.Just|I
    isDriverSpecialLocWarrior: Kernel.Prelude.Just|I
    clientModelName: (clientDevice <&> (.deviceModel))|E
    clientManufacturer: (clientDevice >>= (.deviceManufacturer))|E
    deliveryFileIds: (Kernel.Types.Id.getId <$> ) <$> deliveryFileIds|E
    estimatedEndTimeRangeStart: Kernel.Prelude.fmap (.start)|I
    estimatedEndTimeRangeEnd: Kernel.Prelude.fmap (.end)|I
    rideTags: Lib.Yudhishthira.Tools.Utils.tagsNameValueToTType
    isInsured: Kernel.Prelude.Just|I

  beamType:
    trackingUrl: Text
    merchantOperatingCityId: Maybe Text
    clientBundleVersion: Maybe Text
    clientSdkVersion: Maybe Text
    clientConfigVersion: Maybe Text
    backendConfigVersion: Maybe Text
    clientOsVersion: Maybe Text
    isAdvanceBooking: Maybe Bool
    isPetRide: Maybe Bool
    tripCategory: Maybe TripCategory
    onlinePayment: Maybe Bool
    isDriverSpecialLocWarrior: Maybe Bool
    clientModelName: Maybe Text
    clientManufacturer: Maybe Text
    rideTags: "Maybe [Text]"
    isInsured: Maybe Bool

  constraints:
    id: PrimaryKey
    bookingId: "!SecondaryKey" # forcing to be a secondary key
    driverId: "!SecondaryKey" # forcing to be a secondary key
    driverGoHomeRequestId: "!SecondaryKey" # forcing to be a secondary key

  queries:
    updateCancellationFeeIfCancelledField:
      kvFunction: updateOneWithKV
      params: [cancellationFeeIfCancelled]
      where: id
    updateTipAmountField:
      kvFunction: updateOneWithKV
      params: [tipAmount]
      where: id
    updatePreviousRideTripEndPosAndTime:
      kvFunction: updateOneWithKV
      params: [previousRideTripEndPos, previousRideTripEndTime]
      where: id
    updateEstimatedEndTimeRange:
      kvFunction: updateOneWithKV
      params: [estimatedEndTimeRange]
      where: id
    updateRideTags:
      kvFunction: updateOneWithKV
      params: [rideTags]
      where: id
    updateIsPickupOrDestinationEdited:
      kvFunction: updateOneWithKV
      params: [isPickupOrDestinationEdited]
      where: id

  excludedDefaultQueries:
    - create
    - createMany
    - updateByPrimaryKey
    - findByPrimaryKey

  extraOperations:
    - EXTRA_QUERY_FILE

