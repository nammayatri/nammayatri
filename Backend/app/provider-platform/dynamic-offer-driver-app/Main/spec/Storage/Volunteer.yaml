imports:
  Person: Domain.Types.Person
  Ride: Domain.Types.Ride
  Merchant: Domain.Types.Merchant
  MerchantOperatingCity: Domain.Types.MerchantOperatingCity
  Text: Data.Text
  UTCTime: Kernel.Prelude

Volunteer:
  tableName: volunteer

  fields:
    id : Id Volunteer
    vendorId : Maybe Text
    isActive: Maybe Bool
    place : Text
    createdAt : UTCTime
    updatedAt : UTCTime

  beamType:
    isActive: Maybe Bool

  constraints:
    id: PrimaryKey
    vendorId: PrimaryKey
    place: SecondaryKey

  default:
    isActive: "true"

  fromTType:
    isActive : Kernel.Prelude.Just . Kernel.Prelude.fromMaybe True|I

  toTType:
    isActive : Kernel.Prelude.Just . Kernel.Prelude.fromMaybe True|I


  queries:
    findById:
      kvFunction: findOneWithKV
      where: id

    findAllByPlace:
      kvFunction: findAllWithKV
      where: place

    findByIdAndVendorId:
      kvFunction: findOneWithKV
      where:
        and:
          - id
          - vendorId

  extraOperations:
    - EXTRA_QUERY_FILE
