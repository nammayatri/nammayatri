imports:
  Merchant: Domain.Types.Merchant
  MerchantOperatingCity: Domain.Types.MerchantOperatingCity
  SharedEstimate: Domain.Types.SharedEstimate
  Booking: Domain.Types.Booking
  Person: Domain.Types.Person
  Location: Domain.Types.Location
  ServiceTierType: Domain.Types.ServiceTierType
  HighPrecMoney: Kernel.Types.Common
  Seconds: Kernel.Types.Common
  Meters: Kernel.Types.Common
  BaseUrl: Kernel.Types.Common
  parseBaseUrl: Kernel.Prelude
  showBaseUrl: Kernel.Prelude

SharedBooking:
  tableName: shared_booking
  derives: "Generic,Show"

  fields:
    id: Id SharedBooking
    transactionId: Text
    sharedEstimateId: Id SharedEstimate
    bookingIds: "[Id Booking]"
    status: BookingStatus
    merchantId: Id Merchant
    merchantOperatingCityId: Id MerchantOperatingCity
    providerId: Text
    providerUrl: BaseUrl
    driverId: Maybe (Id Person)
    fromLocationIds: "[Id Location]"
    toLocationIds: "[Id Location]"
    vehicleServiceTier: ServiceTierType|NoRelation
    estimatedTotalFare: HighPrecMoney
    estimatedDuration: Maybe Seconds
    estimatedDistance: Maybe Meters
    tollNames: "Maybe [Text]"
    distanceUnit: DistanceUnit
    pairingTime: UTCTime
    createdAt: UTCTime
    updatedAt: UTCTime

  constraints:
    id: PrimaryKey
    sharedEstimateId: SecondaryKey

  beamType:
    providerUrl: Text

  toTType:
    providerUrl: showBaseUrl|I

  fromTType:
    providerUrl: parseBaseUrl|MI

  sqlType:
    transactionId: character varying(36)
    sharedEstimateId: uuid
    bookingIds: "uuid[]"
    status: character varying(255)
    merchantId: character varying(36)
    merchantOperatingCityId: character varying(36)
    providerId: character varying(255)
    providerUrl: character varying(255)
    driverId: character varying(36)
    fromLocationIds: "uuid[]"
    toLocationIds: "uuid[]"
    vehicleServiceTier: character varying(255)
    estimatedTotalFare: numeric(30,10)
    estimatedDuration: integer
    estimatedDistance: double precision
    tollNames: "text[]"
    pairingTime: timestamptz
    createdAt: timestamptz
    updatedAt: timestamptz

  queries:
    findByTransactionId:
      kvFunction: findOneWithKV
      where: transactionId

    findBySharedEstimateId:
      kvFunction: findOneWithKV
      where: sharedEstimateId

    updateStatus:
      kvFunction: updateOneWithKV
      params: [status, updatedAt]
      where: id

    updateDriverId:
      kvFunction: updateOneWithKV
      params: [driverId, updatedAt]
      where: id

    findByDriverId:
      kvFunction: findAllWithKV
      where: driverId

    findByStatus:
      kvFunction: findAllWithKV
      where: status

  types:
    BookingStatus:
      enum: "NEW,TRIP_ASSIGNED,COMPLETED,CANCELLED,REALLOCATED"
      derive: "HttpInstance"