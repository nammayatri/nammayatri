imports:
  Merchant: Domain.Types.Merchant
  Person: Domain.Types.Person
  FleetType : Domain.Types.FleetType

FleetOwnerInformation:
  tableName: fleet_owner_information
  fields:
    merchantId: Id Merchant
    fleetOwnerPersonId : Id Person
    enabled: Bool
    blocked: Bool
    verified: Bool
    isEligibleForSubscription: Bool
    gstNumber: Maybe Text
    panNumber: Maybe Text
    fleetType: FleetType
    gstImageId : Maybe Text
    panImageId: Maybe Text
    businessLicenseNumber : Maybe Text
    businessLicenseImageId : Maybe Text
    referredByOperatorId: Maybe Text
  sqlType:
    referredByOperatorId: character varying (36)
  excludedFields: [merchantOperatingCityId]
  types:
    FleetType:
      enum: "RENTAL_FLEET,NORMAL_FLEET,BUSINESS_FLEET"
  beamType:
    isEligibleForSubscription: Maybe Bool

  fromTType:
    isEligibleForSubscription: fromMaybe True isEligibleForSubscription | E

  toTType:
    isEligibleForSubscription: Just isEligibleForSubscription | E

  constraints:
    fleetOwnerPersonId : PrimaryKey

  queries:
    updateFleetOwnerVerifiedStatus:
      kvFunction: updateWithKV
      params: [verified, updatedAt]
      where: fleetOwnerPersonId
    updateGstImage:
      kvFunction: updateWithKV
      params: [gstNumber, gstImageId, updatedAt]
      where: fleetOwnerPersonId
    updatePanImage:
      kvFunction: updateWithKV
      params: [panNumber, panImageId, updatedAt]
      where: fleetOwnerPersonId
    updateBusinessLicenseImage:
      kvFunction: updateOneWithKV
      params: [businessLicenseImageId, updatedAt]
      where: fleetOwnerPersonId
    updateFleetOwnerGstNumberAndEnabledStatus:
      kvFunction: updateWithKV
      params: [gstNumber, enabled, updatedAt]
      where: fleetOwnerPersonId
    updateFleetOwnerEnabledStatus:
      kvFunction: updateWithKV
      params: [enabled]
      where: fleetOwnerPersonId
    updateReferredByOperatorId:
      kvFunction: updateOneWithKV
      params: [referredByOperatorId]
      where: fleetOwnerPersonId
